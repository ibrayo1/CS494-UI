<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
    <%- include('header') %>

    <script>
        window.onload = function(){
            var socket = io(); //connect to server

            // Configuration variables
            var numberElements = 200;

            // Globals
            var updateCount = 0;

            // chart objects
            var HeartRateChart = document.getElementById('HeartRateChart').getContext('2d');
            var RespiratoryChart = document.getElementById('RespiratoryRateChart').getContext('2d');

            // config for the chart
            var config = {
                legend: {display: false},
                tooltips: {
                    enabled: false
                }
            }

            // create a new for the heart rate chart
            var heartChart = new Chart(HeartRateChart, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: "Heart Rate",
                        data: [],
                        fill: false,
                        borderColor: '#3498DB',
                        borderWidth: 2,
                        pointRadius: 0
                    }]
                },
                options: Object.assign({}, config, {
                    title:{
                        display: true,
                        text: "Heart Rate Live Chart",
                        fontSize: 22
                    },
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true,
                                suggestedMax: 70
                            }
                        }],
                        xAxes: [{ // hide the x-axes since we dont really need em
                            ticks: {
                                display: false
                            }
                        }]
                    }
                })
            });

            var respiratoryChart = new Chart(RespiratoryChart, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: "Respiratory Rate",
                        data: [],
                        fill: false,
                        borderColor: '#3498DB',
                        borderWidth: 2,
                        pointRadius: 0
                    }]
                },
                options: Object.assign({}, config, {
                    title:{
                        display: true,
                        text: "Respiratory Rate Live Chart",
                        fontSize: 22
                    },
                    scales: {
                        yAxes: [{
                            ticks: {
                                suggestedMin: 380,
                                suggestedMax: 400
                            }
                        }],
                        xAxes: [{ // hide the x-axes since we dont really need em
                            ticks: {
                                display: false
                            }
                        }]
                    }
                })
            });
        
            // update the heart chart from the data collected through the serial
            socket.on('rate', function(data){
                //console.log(data.rate); // log data on console

                heartChart.data.labels.push(data.time);
                heartChart.data.datasets.forEach((dataset) => {dataset.data.push(data.rate)});
                
                respiratoryChart.data.labels.push(data.time);
                respiratoryChart.data.datasets.forEach((dataset) => {dataset.data.push(data.resp)});

                // scroll the graph
                if(updateCount > numberElements){
                    heartChart.data.labels.shift();
                    heartChart.data.datasets[0].data.shift();

                    respiratoryChart.data.labels.shift();
                    respiratoryChart.data.datasets[0].data.shift();

                } else { updateCount++; }

                heartChart.update(); // Update the graph.
                respiratoryChart.update();
            });

            // disables the user from pressing enter on form input
            $('form input').keydown(function(event){
                if(event.keyCode == 13) {
                event.preventDefault();
                    return false;
                }
            });

            // on click listener for the start button
            document.getElementById('start_btn').addEventListener("click", function(){
                var inpt = document.getElementById('age_input'); // get the value from the user
                socket.emit('user_age_input', inpt.value.toString() + ',str'); // send the data to server
                inpt.value = ""; // clears the text box
                inpt.disabled = true; // disables the text input area for the age
                document.getElementById('start_btn').style.visibility = 'hidden'; // hides the start button
                document.getElementById('end_btn').style.visibility = 'visible'; // makes the end button visible
            });

            // on click listener for the end button
            document.getElementById('end_btn').addEventListener("click", function(){
                document.getElementById('age_input').disabled = false; // re enable the text area
                document.getElementById('start_btn').style.visibility = 'visible'; // make the start button visible again
                socket.emit('user_age_input', '0,endMode'); // send data to the server to stop the progarm that is running
                document.getElementById('end_btn').style.visibility = 'hidden'; // hide the end button again
            });

        }

    </script>
</head>

<body>
    <br/>
    <div class="container">
        <div class="row">
            <div class="col-lg-5">
                <div class="card" style="border: none">
                    <h4>Stress Monitoring Mode</h4>
                    <p>Welcome to the stress monitoring mode, 
                    this mode is designed to monitor
                    your stress levels. This mode will ask you to listen to music and then ask you to solve
                    a difficult riddle to see if you get stressed out or not. This mode starts off by taking your 
                    resting heart rate in the first 30 seconds so please stop doing any physical activity to ensure maximum accuracy. 
                    To begin please enter your age below and click the start button. After the 30 seconds please play the music 
                    and then scroll all the way down and try your best to complete the goal </p>
                </div>
                <form class="form-inline justify-content-center" id="form input">
                    <div class="form-group mx-sm-3 mb-2">
                        <input type="number" min="1" step="1" id="age_input" placeholder="please enter your age" required>
                    </div>
                    <input id="start_btn" type="button" class="btn btn-primary mb-2" value="Start"></input>
                    <input id="end_btn" type="button" class="btn btn-danger mb-2" style="visibility: hidden" value="End"></input>
                </form>

                <div style="text-align: center">
                    <audio id="player" controls>
                        <source src="/audio/mozart.mp3" type="audio/mp3" />
                    </audio>
                </div>
            </div>
            <div class="col-lg-7">
                <figure class="figure" style="text-align: center">
                    <img src="/images/stressImage.jpg" style="width: 75%" class="img-fluid">
                </figure>
            </div>
        </div>
    </div><br/>

    <div class="container">
        <div class="row">
            <div class="col-lg-4">
                <div style="height: 100%" class="card">
                    <h4 style="text-align: center" id="bpm">0</h4>
                    <h4 style="text-align: center;">Heart Rate (BPM)</h4>
                </div>
            </div>
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-body">
                        <canvas height="100" id="HeartRateChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br/>
    <div class="container">
        <div class="row">
            <div class="col-lg-4">
                <div style="height: 100%" class="card">
                    <h4 style="text-align: center" id="rr">0</h4>
                    <h4 style="text-align: center;">Respiratory Rate</h4>
                </div>
            </div>
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-body">
                        <canvas height="100" id="RespiratoryRateChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div><br/>

    <div class="container justify-content-center" style="text-align: center">
        <h3> The goal is to get 10 points in following game: </h3>
        <iframe src="https://c.simmer.io/static/unityFrame/index.html?url=https%3A%2F%2Fsimmercdn.com%2Funity%2FArOcg0jhIjQgaW2bkAbPZlOkgc83%2Fcontent%2F7cd8afbb-f845-02e4-913e-5f0428609d35&amp;imagePath=screens/4.png" style="width:480px;height:300px;border:0;"></iframe>
    </div>

    <br/>
    
</body>

</html>